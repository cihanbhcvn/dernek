@page "/grid"
@using Entities.Concrete
@using WebUI.Services
@using DevExpress.Blazor
@inject IDataService _dataService
@inject NavigationManager NavManager


<h2>Members</h2>

@if (Data == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DxButton Text="Add Member" Click="@AddMemberPage" />
    <DxGrid Data="@Data"
            PageSize="10"
            KeyFieldName="Id"
            EditModelSaving="Grid_EditModelSaving"
            DataItemDeleting="Grid_DataItemDeleting">
        <Columns>
            <DxGridCommandColumn Width="160px" />
            <DxGridDataColumn FieldName="FirstName" SortIndex="0" AllowSort="true" />
            <DxGridDataColumn FieldName="LastName" SortIndex="0" AllowSort="true" />
            <DxGridDataColumn FieldName="Email" SortIndex="1" AllowSort="true" />
            <DxGridDataColumn FieldName="PhoneNumber" SortIndex="2" AllowSort="true" />
        </Columns>
        <EditFormTemplate Context="editFormContext">
            <DxFormLayout CssClass="w-100">
                <DxFormLayoutItem Caption="First Name:" ColSpanMd="6">
                    @editFormContext.GetEditor("FirstName")
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Last Name:" ColSpanMd="6">
                    @editFormContext.GetEditor("LastName")
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Email:" ColSpanMd="6">
                    @editFormContext.GetEditor("Email")
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Phone Number:" ColSpanMd="6">
                    @editFormContext.GetEditor("PhoneNumber")
                </DxFormLayoutItem>
            </DxFormLayout>
        </EditFormTemplate>
    </DxGrid>
    <div>
        <p>adgaqsdhaxha</p>
    </div>
}

@code
{
    IEnumerable<Member> Data { get; set; }
    EditForm EditFormContext = new EditForm();

    protected override async Task OnInitializedAsync()
    {
        Data = await _dataService.GetAllAsync();
    }

    void AddMemberPage()
    {
        NavManager.NavigateTo("/add-member");
    }

    async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e)
    {
        var editMember = (Member)e.EditModel;
        if (e.IsNew)
            await _dataService.AddAsync(editMember);
        else
            await _dataService.UpdateAsync(editMember);
        await UpdateDataAsync();
    }
    async Task Grid_DataItemDeleting(GridDataItemDeletingEventArgs e)
    {
        await _dataService.DeleteAsync(1);
        await UpdateDataAsync();
    }
    async Task UpdateDataAsync()
    {
        Data = await _dataService.GetAllAsync();
    }


}